<%- include('../partials/header', { activePage: 'security' }) %>

<main>
  <div class="admin-header">
    <h1>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã</h1>
    <div class="user-info">
      <span>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong><%= user.username %></strong>!</span>
      <div class="user-actions">
        <a href="/admin" class="btn btn-secondary">‚Üê –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a>
      </div>
    </div>
  </div>

  <div class="security-container">
    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ -->
    <section class="security-section">
      <h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞</h2>
      <div class="stats-grid">
        <div class="stat-card">
          <h3>–í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫</h3>
          <div class="stat-number"><%= stats.total_attempts || 0 %></div>
          <p>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</p>
        </div>
        <div class="stat-card">
          <h3>–£—Å–ø–µ—à–Ω—ã—Ö –≤—Ö–æ–¥–æ–≤</h3>
          <div class="stat-number success"><%= stats.successful_attempts || 0 %></div>
          <p>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</p>
        </div>
        <div class="stat-card">
          <h3>–ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫</h3>
          <div class="stat-number danger"><%= stats.failed_attempts || 0 %></div>
          <p>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</p>
        </div>
        <div class="stat-card">
          <h3>–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞</h3>
          <div class="stat-number"><%= stats.success_rate || 0 %>%</div>
          <p>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</p>
        </div>
      </div>
    </section>

    <!-- –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ -->
    <section class="security-section">
      <h2>üö® –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞</h2>
      <% if (suspicious_ips && suspicious_ips.length > 0) { %>
        <div class="table-container">
          <table class="security-table">
            <thead>
              <tr>
                <th>IP –ê–¥—Ä–µ—Å</th>
                <th>–í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫</th>
                <th>–ù–µ—É–¥–∞—á–Ω—ã—Ö</th>
                <th>–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ—É–¥–∞—á</th>
                <th>–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              <% suspicious_ips.forEach(ip => { %>
                <tr>
                  <td><%= ip.ip_address %></td>
                  <td><%= ip.total_attempts %></td>
                  <td><%= ip.failed_attempts %></td>
                  <td><span class="badge badge-danger"><%= ip.failure_rate %>%</span></td>
                  <td><%= new Date(ip.last_attempt).toLocaleString('ru-RU') %></td>
                  <td>
                    <button class="btn btn-sm btn-danger" onclick="blockIP('<%= ip.ip_address %>')">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      <% } else { %>
        <div class="no-data">
          <p>–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ</p>
        </div>
      <% } %>
    </section>

    <!-- –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ -->
    <section class="security-section">
      <h2>üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞</h2>
      <% if (blacklisted_ips && blacklisted_ips.length > 0) { %>
        <div class="table-container">
          <table class="security-table">
            <thead>
              <tr>
                <th>IP –ê–¥—Ä–µ—Å</th>
                <th>–ü—Ä–∏—á–∏–Ω–∞</th>
                <th>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ</th>
                <th>–î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              <% blacklisted_ips.forEach(ip => { %>
                <tr>
                  <td><%= ip.ip_address %></td>
                  <td><%= ip.reason %></td>
                  <td>
                    <% if (ip.blocked_until) { %>
                      <%= new Date(ip.blocked_until).toLocaleString('ru-RU') %>
                    <% } else { %>
                      <span class="badge badge-warning">–ù–∞–≤—Å–µ–≥–¥–∞</span>
                    <% } %>
                  </td>
                  <td><%= new Date(ip.created_at).toLocaleString('ru-RU') %></td>
                  <td>
                    <button class="btn btn-sm btn-success" onclick="unblockIP('<%= ip.ip_address %>')">–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      <% } else { %>
        <div class="no-data">
          <p>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤ –Ω–µ—Ç</p>
        </div>
      <% } %>
    </section>

    <!-- –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞ -->
    <section class="security-section">
      <h2>üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞</h2>
      <% if (recent_attempts && recent_attempts.length > 0) { %>
        <div class="table-container">
          <table class="security-table">
            <thead>
              <tr>
                <th>–î–∞—Ç–∞/–í—Ä–µ–º—è</th>
                <th>IP –ê–¥—Ä–µ—Å</th>
                <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                <th>–†–µ–∑—É–ª—å—Ç–∞—Ç</th>
                <th>User Agent</th>
              </tr>
            </thead>
            <tbody>
              <% recent_attempts.forEach(attempt => { %>
                <tr>
                  <td><%= new Date(attempt.created_at).toLocaleString('ru-RU') %></td>
                  <td><%= attempt.ip_address %></td>
                  <td><%= attempt.username || '–ù–µ —É–∫–∞–∑–∞–Ω' %></td>
                  <td>
                    <% if (attempt.success) { %>
                      <span class="badge badge-success">–£—Å–ø–µ—à–Ω–æ</span>
                    <% } else { %>
                      <span class="badge badge-danger">–ù–µ—É–¥–∞—á–Ω–æ</span>
                    <% } %>
                  </td>
                  <td class="user-agent"><%= attempt.user_agent %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      <% } else { %>
        <div class="no-data">
          <p>–ü–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
        </div>
      <% } %>
    </section>

    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ -->
    <section class="security-section">
      <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
      <div class="settings-grid">
        <div class="setting-card">
          <h3>–ó–∞—â–∏—Ç–∞ –æ—Ç –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞</h3>
          <p>–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞: <strong>5</strong></p>
          <p>–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: <strong>30 –º–∏–Ω—É—Ç</strong></p>
          <p>–û–∫–Ω–æ –≤—Ä–µ–º–µ–Ω–∏: <strong>15 –º–∏–Ω—É—Ç</strong></p>
        </div>
        <div class="setting-card">
          <h3>–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
          <p>–•—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤: <strong>30 –¥–Ω–µ–π</strong></p>
          <p>–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞: <strong>–í–∫–ª—é—á–µ–Ω–∞</strong></p>
        </div>
      </div>
    </section>
  </div>
</main>

<style>
  .security-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .security-section {
    background: white;
    border-radius: 10px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .security-section h2 {
    margin-bottom: 1.5rem;
    color: #333;
    border-bottom: 2px solid #e1e5e9;
    padding-bottom: 0.5rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .stat-card {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    text-align: center;
    border-left: 4px solid #667eea;
  }

  .stat-number {
    font-size: 2rem;
    font-weight: bold;
    color: #333;
    margin: 0.5rem 0;
  }

  .stat-number.success {
    color: #28a745;
  }

  .stat-number.danger {
    color: #dc3545;
  }

  .table-container {
    overflow-x: auto;
  }

  .security-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
  }

  .security-table th,
  .security-table td {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 1px solid #e1e5e9;
  }

  .security-table th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: #333;
  }

  .security-table tr:hover {
    background-color: #f8f9fa;
  }

  .badge {
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .badge-success {
    background-color: #d4edda;
    color: #155724;
  }

  .badge-danger {
    background-color: #f8d7da;
    color: #721c24;
  }

  .badge-warning {
    background-color: #fff3cd;
    color: #856404;
  }

  .user-agent {
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .no-data {
    text-align: center;
    padding: 2rem;
    color: #666;
    background: #f8f9fa;
    border-radius: 8px;
  }

  .settings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .setting-card {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    border-left: 4px solid #28a745;
  }

  .setting-card h3 {
    margin-bottom: 1rem;
    color: #333;
  }

  .setting-card p {
    margin-bottom: 0.5rem;
    color: #666;
  }

  .btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .settings-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  function blockIP(ip) {
    if (confirm(`–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å IP –∞–¥—Ä–µ—Å ${ip}?`)) {
      fetch('/admin/security/block-ip', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ip: ip })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('IP –∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
          location.reload();
        } else {
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ IP');
        }
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ IP');
      });
    }
  }

  function unblockIP(ip) {
    if (confirm(`–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å IP –∞–¥—Ä–µ—Å ${ip}?`)) {
      fetch('/admin/security/unblock-ip', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ip: ip })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('IP –∞–¥—Ä–µ—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
          location.reload();
        } else {
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ IP');
        }
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ IP');
      });
    }
  }
</script>

<%- include('../partials/footer') %> 